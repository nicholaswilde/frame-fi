---
version: '3'

vars:
  IP: "192.168.2.169"
  IMAGE: nicholaswilde/mkdocs-material
  PORT: 8000

tasks:
  gpro:
    desc: Run gemini with 2.5 pro model
    cmds:
      - gemini -m gemini-2.5-pro
  gflash:
    desc: Run gemini with 2.5 flash model
    cmds:
      - gemini -m gemini-2.5-flash
  flash:
    desc: Run the flash.sh script
    cmds:
      - ./scripts/flash.sh
  export:
    desc: Export the task list to task-list.txt
    cmds:
      - task -l > task-list.txt
  serve:
    desc: >-
      Start development server on http://0.0.0.0:{{ .PORT }} using
      Docker and mkdocs-material
    cmds:
      - >-
        docker run --rm -it -p {{ .PORT }}:{{ .PORT}} -v ${PWD}:/docs
        --platform linux/amd64 {{ .IMAGE }} serve
        --dev-addr 0.0.0.0:{{ .PORT }} -f ./mkdocs.yml
  sync:
    desc: 'Runs the sync script.'
    cmds:
      - ./scripts/sync.sh
  ping:
    desc: Ping the device
    cmds:
      - ping {{.IP}}
  smsc:
    desc: Switch to MSC mode
    cmds:
      - curl -X POST http://{{.IP}}/mode/msc
  ftp:
    desc: Start FTP with device
    cmds:
      - ftp {{.IP}}
  sftp:
    desc: Switch to FTP mode
    cmds:
      - curl -X POST http://{{.IP}}/mode/ftp
  restart:
    desc: Restart the device
    cmds:
      - curl -X POST http://{{.IP}}/restart
  get:
    desc: curl -X GET
    cmds:
      - curl -X GET http://{{.IP}}
  prune:
    desc: Prune the system
    cmds:
      - pio system prune
  init:
    desc: Init the project
    preconditions:
      - test -f include/secrets.h.tmpl
      - test -f scripts/.env.tmpl
    cmds:
      - cp include/secrets.h.tmpl include/secrets.h
      - cp scripts/.env.tmpl scripts/.env
  encrypt:
    desc: Encrypt secrets
    preconditions:
      - test -f include/secrets.h
      - test -f scripts/.env
    cmds:
      - sops -e include/secrets.h > include/secrets.h.enc
      - sops -e --input-type dotenv --output-type dotenv scripts/.env > scripts/.env.enc
  decrypt:
    desc: Decrypt secrets
    preconditions:
      - test -f include/secrets.h.enc
      - test -f scripts/.env.enc
    cmds:
      - sops -d include/secrets.h.enc > include/secrets.h
      - sops -d --input-type dotenv --output-type dotenv scripts/.env.enc > scripts/.env
  build:
    desc: Build the project
    cmds:
      - pio run
  clean:
    desc: Clean build files
    cmds:
      - pio run --target clean
  fullclean:
    desc: Perform a full clean of build files
    cmds:
      - pio run --target fullclean
  upload:
    desc: Upload the firmware
    cmds:
      - pio run --target upload
  uploadm:
    desc: Upload the firmware and monitor
    cmds:
      - pio run -t upload -t monitor
  monitor:
    desc: Monitor the serial output
    cmds:
      - pio device monitor
  list-devices:
    desc: List connected serial devices
    cmds:
      - pio device list
  update-packages:
    desc: Update project dependencies
    cmds:
      - pio pkg update
  verbose-build:
    desc: Build with verbose output
    cmds:
      - pio run --verbose
  reset:
    desc: Reset the Dongle by flashing the default fimrware.
    cmds:
      - task: flash
        dir: ./reference/firmware
  default:
    cmds:
      - task -l
    silent: true
