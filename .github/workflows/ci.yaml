---
name: PlatformIO CI
on:  # yamllint disable-line rule:truthy
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        env:
          - LILYGO-T-Dongle-S3
    runs-on: ubuntu-latest

    steps:
      - name: "Create filename"
        run: |
          VAR="frame-fi-${{ github.ref_name }}-${{ matrix.env }}"
          echo "BASENAME=${VAR,,}" >> $GITHUB_ENV

      - name: "Checkout repository"
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: "Cache pip"
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: "Cache PlatformIO Core"
        uses: actions/cache@v4
        with:
          path: ~/.platformio/packages
          key: ${{ runner.os }}-${{ hashFiles('**/platformio.ini') }}

      - name: "Setup Python"
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: "Install PlatformIO Core"
        run: pip install --upgrade platformio

      - name: "Copy secrets"
        run: cp include/secrets.h.tmpl include/secrets.h

      - name: "Build PlatformIO Project ${{ matrix.env }}"
        run: pio run --environment ${{ matrix.env }}

      - name: "Zip binaries"
        run: zip -j ${{ env.BASENAME }}.zip .pio/build/${{ matrix.env }}/*.bin
        
      - name: "Upload ${{ matrix.env }} artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BASENAME }}
          path: ${{ env.BASENAME }}.zip

  # This job creates the release and attaches all artifacts
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          # Fetches all history for all branches and tags
          fetch-depth: 0
            
      - name: "Download all artifacts"
        uses: actions/download-artifact@v5
        with:
          pattern: "frame-fi-*"
          path: dist
                  
      - name: "Create Draft Release"
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          draft: true
          prerelease: false
          files: dist/**/*
          generate_release_notes: true
